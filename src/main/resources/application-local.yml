spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://localhost:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
    hikari:
      maximum-pool-size: 16
      minimum-idle: 4
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        default_batch_fetch_size: 1000
        jdbc:
          batch_size: 100
        show_sql: true
        format_sql: true
        use_sql_comments: true
    show-sql: true

  data:
    redis:
      cluster:
        nodes:
          - 127.0.0.1:7001
          - 127.0.0.1:7002
          - 127.0.0.1:7003
          - 127.0.0.1:7004
          - 127.0.0.1:7005
          - 127.0.0.1:7006
        max-redirects: 3
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 16
          max-idle: 8
          min-idle: 0

# Redisson용 클러스터 설정
app:
  redis:
    cluster-nodes:
      - 127.0.0.1:7001
      - 127.0.0.1:7002
      - 127.0.0.1:7003
      - 127.0.0.1:7004
      - 127.0.0.1:7005
      - 127.0.0.1:7006

  cache:
    type: redis
    redis:
      time-to-live: 1800000 # 30분
      key-prefix: "ecommerce::"

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable.idempotence: true # 중복 메시지 방지
        retries: 3 # 재시도 횟수
        acks: all # 모든 복제본 확인 후 응답
    consumer:
      group-id: ecommerce-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "kr.hhplus.be.server.*.event"
        auto.offset.reset: earliest # 파티션 증설 시 메시지 누락 방지
        enable.auto.commit: true # 자동 커밋 활성화
        auto.commit.interval.ms: 1000 # 1초마다 커밋
        heartbeat.interval.ms: 3000 # 하트비트 간격
        session.timeout.ms: 10000 # 세션 타임아웃 (하트비트의 3배)
        request.timeout.ms: 30000 # 요청 타임아웃
        fetch.min.bytes: 1 # 최소 fetch 크기
        fetch.max.bytes: 52428800 # 최대 fetch 크기 (50MB)
        fetch.max.wait.ms: 500 # fetch 대기 시간
        max.poll.records: 500 # 한 번에 poll할 최대 레코드 수

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs.yaml
  swagger-ui:
    enabled: true

logging:
  level:
    kr.hhplus.be.server: DEBUG
    org.springframework.transaction: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.cache: DEBUG
